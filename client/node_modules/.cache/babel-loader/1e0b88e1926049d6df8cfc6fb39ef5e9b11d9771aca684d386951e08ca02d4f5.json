{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import platter from'./platter.jpg';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function EditRecipe(_ref){let{username}=_ref;const[recipes,setRecipes]=useState([]);const[selectedRecipeId,setSelectedRecipeId]=useState('');const[message,setMessage]=useState('');const[recipe,setRecipe]=useState({name:'',description:''});const[isLoading,setIsLoading]=useState(false);const navigate=useNavigate();const token=\"YOUR_BEARER_TOKEN\";useEffect(()=>{const fetchUserRecipes=async()=>{try{setIsLoading(true);const response=await fetch(`/get_user_recipes/${username}`,{headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();if(response.ok){setRecipes(data.recipes);}else{console.error('Error fetching user recipes:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}};fetchUserRecipes();},[username]);useEffect(()=>{const fetchRecipeDetails=async()=>{if(selectedRecipeId&&recipes.length>0){try{setIsLoading(true);const response=await fetch(`/get_recipe/${username}/${selectedRecipeId}`,{headers:{'Authorization':`Bearer ${token}`}});const data=await response.json();if(response.ok){setRecipe({name:data.name,description:data.description});}else{console.error('Error fetching recipe details:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}}};fetchRecipeDetails();},[username,selectedRecipeId,recipes]);const handleSelectRecipe=e=>{setSelectedRecipeId(e.target.value);const selectedRecipe=recipes.find(recipe=>recipe.id===parseInt(e.target.value));if(selectedRecipe){setRecipe({name:selectedRecipe.name,description:selectedRecipe.description});}};const handleSubmit=async e=>{e.preventDefault();if(!selectedRecipeId||selectedRecipeId===''){console.error('No recipe selected');return;}const recipeData={name:recipe.name,description:recipe.description};try{setIsLoading(true);const response=await fetch(`/edit_recipe/${selectedRecipeId}`,{method:'PUT',headers:{'Content-Type':'application/json','UserId':username},body:JSON.stringify(recipeData)});const data=await response.json();if(response.ok){setMessage('Recipe updated successfully');setTimeout(()=>{setMessage('');navigate('/my-recipes');},3000);}else{console.error('Error updating recipe:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center min-h-screen bg-cover bg-center\",style:{backgroundImage:`url(${platter})`},children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-lg mx-auto  p-8 rounded-lg shadow-md mt-12 bg-cover bg-white bg-opacity-30 bg-center border-rose-950 b_glow\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-semibold text-slate-950 mb-6\",children:\"Edit Recipe\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"mb-4 p-3 bg-green-100 text-green-700 rounded\",children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"selectRecipe\",className:\"block text-slate-950 font-medium mb-2\",children:\"Select Recipe:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"selectRecipe\",onChange:handleSelectRecipe,value:selectedRecipeId,className:\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-slate-950\",children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a recipe\"}),recipes.map(recipe=>/*#__PURE__*/_jsx(\"option\",{value:recipe.id,children:recipe.name},recipe.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"block text-slate-950 font-medium mb-2\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:recipe.name,onChange:e=>setRecipe({...recipe,name:e.target.value}),className:\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-slate-950\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",className:\"block text-slate-950 font-medium mb-2\",children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",value:recipe.description,onChange:e=>setRecipe({...recipe,description:e.target.value}),className:\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-blue-500\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-rose-950 text-white p-2 rounded-lg hover:bg-rose-900 transition-colors\",children:\"Save Changes\"})]})]})});}export default EditRecipe;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","platter","jsx","_jsx","jsxs","_jsxs","EditRecipe","_ref","username","recipes","setRecipes","selectedRecipeId","setSelectedRecipeId","message","setMessage","recipe","setRecipe","name","description","isLoading","setIsLoading","navigate","token","fetchUserRecipes","response","fetch","headers","data","json","ok","console","error","fetchRecipeDetails","length","handleSelectRecipe","e","target","value","selectedRecipe","find","id","parseInt","handleSubmit","preventDefault","recipeData","method","body","JSON","stringify","setTimeout","className","style","backgroundImage","children","onSubmit","htmlFor","onChange","disabled","map","type"],"sources":["/home/janewmwaura/newrecipe/Phase_4_Project_Recipe_Hub/client/src/EditRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport platter from './platter.jpg';\nfunction EditRecipe({ username }) {\n    const [recipes, setRecipes] = useState([]);\n    const [selectedRecipeId, setSelectedRecipeId] = useState('');\n    const [message, setMessage] = useState('');\n    const [recipe, setRecipe] = useState({\n        name: '',\n        description: ''\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n    const token = \"YOUR_BEARER_TOKEN\";  \n    \n    useEffect(() => {\n        const fetchUserRecipes = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch(`/get_user_recipes/${username}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`  \n                    }\n                });\n                const data = await response.json();\n                if (response.ok) {\n                    setRecipes(data.recipes);\n                } else {\n                    console.error('Error fetching user recipes:', data.message);\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchUserRecipes();\n    }, [username]);\n\n    useEffect(() => {\n        const fetchRecipeDetails = async () => {\n            if (selectedRecipeId && recipes.length > 0) {\n                try {\n                    setIsLoading(true);\n                    const response = await fetch(`/get_recipe/${username}/${selectedRecipeId}`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`  \n                        }\n                    });\n                    const data = await response.json();\n                    if (response.ok) {\n                        setRecipe({\n                            name: data.name,\n                            description: data.description\n                        });\n                    } else {\n                        console.error('Error fetching recipe details:', data.message);\n                    }\n                } catch (error) {\n                    console.error('Error:', error);\n                } finally {\n                    setIsLoading(false);\n                }\n            }\n        };\n\n        fetchRecipeDetails();\n    }, [username, selectedRecipeId, recipes]);\n\n    const handleSelectRecipe = (e) => {\n        setSelectedRecipeId(e.target.value);\n        const selectedRecipe = recipes.find(recipe => recipe.id === parseInt(e.target.value));\n        if (selectedRecipe) {\n            setRecipe({\n                name: selectedRecipe.name,\n                description: selectedRecipe.description\n            });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (!selectedRecipeId || selectedRecipeId === '') {\n            console.error('No recipe selected');\n            return;\n        }\n    \n        const recipeData = {\n            name: recipe.name,\n            description: recipe.description,\n        };\n    \n        try {\n            setIsLoading(true);\n            const response = await fetch(`/edit_recipe/${selectedRecipeId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'UserId': username  \n                },\n                body: JSON.stringify(recipeData)\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setMessage('Recipe updated successfully'); \n                setTimeout(() => {\n                    setMessage(''); \n                    navigate('/my-recipes');\n                }, 3000);}\n                 else {\n                console.error('Error updating recipe:', data.message);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n     <div className=\"flex items-center justify-center min-h-screen bg-cover bg-center\" style={{ backgroundImage: `url(${platter})` }}>\n        <div className=\"max-w-lg mx-auto  p-8 rounded-lg shadow-md mt-12 bg-cover bg-white bg-opacity-30 bg-center border-rose-950 b_glow\">\n            <h2 className=\"text-2xl font-semibold text-slate-950 mb-6\">Edit Recipe</h2>\n            {message && (\n                <div className=\"mb-4 p-3 bg-green-100 text-green-700 rounded\">\n                    {message}\n                </div>\n            )}\n            <form onSubmit={handleSubmit}>\n                <div className=\"mb-4\">\n                    <label htmlFor=\"selectRecipe\" className=\"block text-slate-950 font-medium mb-2\">Select Recipe:</label>\n                    <select \n                        id=\"selectRecipe\" \n                        onChange={handleSelectRecipe} \n                        value={selectedRecipeId}\n                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-slate-950\"\n                    >\n                        <option value=\"\" disabled>Select a recipe</option>\n                        {recipes.map(recipe => (\n                            <option key={recipe.id} value={recipe.id}>\n                                {recipe.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div className=\"mb-4\">\n                    <label htmlFor=\"name\" className=\"block text-slate-950 font-medium mb-2\">Name:</label>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        value={recipe.name} \n                        onChange={(e) => setRecipe({ ...recipe, name: e.target.value })} \n                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-slate-950\"\n                    />\n                </div>\n                <div className=\"mb-4\">\n                    <label htmlFor=\"description\" className=\"block text-slate-950 font-medium mb-2\">Description:</label>\n                    <textarea \n                        id=\"description\" \n                        value={recipe.description} \n                        onChange={(e) => setRecipe({ ...recipe, description: e.target.value })} \n                        className=\"w-full p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring focus:border-blue-500\"\n                    ></textarea>\n                </div>\n                <button \n                    type=\"submit\" \n                    className=\"w-full bg-rose-950 text-white p-2 rounded-lg hover:bg-rose-900 transition-colors\"\n                >\n                    Save Changes\n                </button>\n            </form>\n          </div>\n        </div>\n        \n    );\n}\n\nexport default EditRecipe;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,OAAO,KAAM,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACpC,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACa,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACiB,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAC,CACjCmB,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,EACjB,CAAC,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGtB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAuB,QAAQ,CAAGrB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAsB,KAAK,CAAG,mBAAmB,CAEjCvB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAwB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACAH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,qBAAqBjB,QAAQ,EAAE,CAAE,CAC1DkB,OAAO,CAAE,CACL,eAAe,CAAE,UAAUJ,KAAK,EACpC,CACJ,CAAC,CAAC,CACF,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAIJ,QAAQ,CAACK,EAAE,CAAE,CACbnB,UAAU,CAACiB,IAAI,CAAClB,OAAO,CAAC,CAC5B,CAAC,IAAM,CACHqB,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEJ,IAAI,CAACd,OAAO,CAAC,CAC/D,CACJ,CAAE,MAAOkB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNX,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAEDG,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACf,QAAQ,CAAC,CAAC,CAEdT,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAiC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAIrB,gBAAgB,EAAIF,OAAO,CAACwB,MAAM,CAAG,CAAC,CAAE,CACxC,GAAI,CACAb,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,eAAejB,QAAQ,IAAIG,gBAAgB,EAAE,CAAE,CACxEe,OAAO,CAAE,CACL,eAAe,CAAE,UAAUJ,KAAK,EACpC,CACJ,CAAC,CAAC,CACF,KAAM,CAAAK,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAIJ,QAAQ,CAACK,EAAE,CAAE,CACbb,SAAS,CAAC,CACNC,IAAI,CAAEU,IAAI,CAACV,IAAI,CACfC,WAAW,CAAES,IAAI,CAACT,WACtB,CAAC,CAAC,CACN,CAAC,IAAM,CACHY,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAEJ,IAAI,CAACd,OAAO,CAAC,CACjE,CACJ,CAAE,MAAOkB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNX,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CACJ,CAAC,CAEDY,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,CAACxB,QAAQ,CAAEG,gBAAgB,CAAEF,OAAO,CAAC,CAAC,CAEzC,KAAM,CAAAyB,kBAAkB,CAAIC,CAAC,EAAK,CAC9BvB,mBAAmB,CAACuB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,KAAM,CAAAC,cAAc,CAAG7B,OAAO,CAAC8B,IAAI,CAACxB,MAAM,EAAIA,MAAM,CAACyB,EAAE,GAAKC,QAAQ,CAACN,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CACrF,GAAIC,cAAc,CAAE,CAChBtB,SAAS,CAAC,CACNC,IAAI,CAAEqB,cAAc,CAACrB,IAAI,CACzBC,WAAW,CAAEoB,cAAc,CAACpB,WAChC,CAAC,CAAC,CACN,CACJ,CAAC,CAED,KAAM,CAAAwB,YAAY,CAAG,KAAO,CAAAP,CAAC,EAAK,CAC9BA,CAAC,CAACQ,cAAc,CAAC,CAAC,CAElB,GAAI,CAAChC,gBAAgB,EAAIA,gBAAgB,GAAK,EAAE,CAAE,CAC9CmB,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC,CACnC,OACJ,CAEA,KAAM,CAAAa,UAAU,CAAG,CACf3B,IAAI,CAAEF,MAAM,CAACE,IAAI,CACjBC,WAAW,CAAEH,MAAM,CAACG,WACxB,CAAC,CAED,GAAI,CACAE,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,gBAAgBd,gBAAgB,EAAE,CAAE,CAC7DkC,MAAM,CAAE,KAAK,CACbnB,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAElB,QACd,CAAC,CACDsC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CACnC,CAAC,CAAC,CACF,KAAM,CAAAjB,IAAI,CAAG,KAAM,CAAAH,QAAQ,CAACI,IAAI,CAAC,CAAC,CAClC,GAAIJ,QAAQ,CAACK,EAAE,CAAE,CACbf,UAAU,CAAC,6BAA6B,CAAC,CACzCmC,UAAU,CAAC,IAAM,CACbnC,UAAU,CAAC,EAAE,CAAC,CACdO,QAAQ,CAAC,aAAa,CAAC,CAC3B,CAAC,CAAE,IAAI,CAAC,CAAC,CAAC,IACJ,CACNS,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEJ,IAAI,CAACd,OAAO,CAAC,CACzD,CACJ,CAAE,MAAOkB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNX,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,mBACCjB,IAAA,QAAK+C,SAAS,CAAC,kEAAkE,CAACC,KAAK,CAAE,CAAEC,eAAe,CAAE,OAAOnD,OAAO,GAAI,CAAE,CAAAoD,QAAA,cAC7HhD,KAAA,QAAK6C,SAAS,CAAC,mHAAmH,CAAAG,QAAA,eAC9HlD,IAAA,OAAI+C,SAAS,CAAC,4CAA4C,CAAAG,QAAA,CAAC,aAAW,CAAI,CAAC,CAC1ExC,OAAO,eACJV,IAAA,QAAK+C,SAAS,CAAC,8CAA8C,CAAAG,QAAA,CACxDxC,OAAO,CACP,CACR,cACDR,KAAA,SAAMiD,QAAQ,CAAEZ,YAAa,CAAAW,QAAA,eACzBhD,KAAA,QAAK6C,SAAS,CAAC,MAAM,CAAAG,QAAA,eACjBlD,IAAA,UAAOoD,OAAO,CAAC,cAAc,CAACL,SAAS,CAAC,uCAAuC,CAAAG,QAAA,CAAC,gBAAc,CAAO,CAAC,cACtGhD,KAAA,WACImC,EAAE,CAAC,cAAc,CACjBgB,QAAQ,CAAEtB,kBAAmB,CAC7BG,KAAK,CAAE1B,gBAAiB,CACxBuC,SAAS,CAAC,mGAAmG,CAAAG,QAAA,eAE7GlD,IAAA,WAAQkC,KAAK,CAAC,EAAE,CAACoB,QAAQ,MAAAJ,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACjD5C,OAAO,CAACiD,GAAG,CAAC3C,MAAM,eACfZ,IAAA,WAAwBkC,KAAK,CAAEtB,MAAM,CAACyB,EAAG,CAAAa,QAAA,CACpCtC,MAAM,CAACE,IAAI,EADHF,MAAM,CAACyB,EAEZ,CACX,CAAC,EACE,CAAC,EACR,CAAC,cACNnC,KAAA,QAAK6C,SAAS,CAAC,MAAM,CAAAG,QAAA,eACjBlD,IAAA,UAAOoD,OAAO,CAAC,MAAM,CAACL,SAAS,CAAC,uCAAuC,CAAAG,QAAA,CAAC,OAAK,CAAO,CAAC,cACrFlD,IAAA,UACIwD,IAAI,CAAC,MAAM,CACXnB,EAAE,CAAC,MAAM,CACTH,KAAK,CAAEtB,MAAM,CAACE,IAAK,CACnBuC,QAAQ,CAAGrB,CAAC,EAAKnB,SAAS,CAAC,CAAE,GAAGD,MAAM,CAAEE,IAAI,CAAEkB,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAE,CAChEa,SAAS,CAAC,mGAAmG,CAChH,CAAC,EACD,CAAC,cACN7C,KAAA,QAAK6C,SAAS,CAAC,MAAM,CAAAG,QAAA,eACjBlD,IAAA,UAAOoD,OAAO,CAAC,aAAa,CAACL,SAAS,CAAC,uCAAuC,CAAAG,QAAA,CAAC,cAAY,CAAO,CAAC,cACnGlD,IAAA,aACIqC,EAAE,CAAC,aAAa,CAChBH,KAAK,CAAEtB,MAAM,CAACG,WAAY,CAC1BsC,QAAQ,CAAGrB,CAAC,EAAKnB,SAAS,CAAC,CAAE,GAAGD,MAAM,CAAEG,WAAW,CAAEiB,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAE,CACvEa,SAAS,CAAC,kGAAkG,CACrG,CAAC,EACX,CAAC,cACN/C,IAAA,WACIwD,IAAI,CAAC,QAAQ,CACbT,SAAS,CAAC,kFAAkF,CAAAG,QAAA,CAC/F,cAED,CAAQ,CAAC,EACP,CAAC,EACJ,CAAC,CACH,CAAC,CAGd,CAEA,cAAe,CAAA/C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}