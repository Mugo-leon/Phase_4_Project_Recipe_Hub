{"ast":null,"code":"var _jsxFileName = \"/home/janewmwaura/newrecipe/Phase_4_Project_Recipe_Hub/client/src/CreateRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateRecipe({\n  user_id\n}) {\n  _s();\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [message, setMessage] = useState('');\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const recipeData = {\n      name: name,\n      description: description,\n      user: user_id // Associate the new recipe with the logged-in user\n    };\n    try {\n      const response = await fetch('/create_recipe', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'UserId': user_id // Pass the logged-in username in the headers\n        },\n        body: JSON.stringify(recipeData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage('Recipe created successfully'); // Set success message\n        setTimeout(() => {\n          setMessage(''); // Clear the success message after a certain time\n          navigate('/dashboard');\n        }, 3000); // Auto-dismiss after 3 seconds\n      } else {\n        setMessage(data.error || 'Error creating recipe');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      setMessage('Error creating recipe');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-recipe-container\",\n      children: [message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"success-message\",\n        style: {\n          color: 'green',\n          fontWeight: 'bold'\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create New Recipe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"recipe-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            children: \"Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"name\",\n            name: \"name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Create Recipe\",\n          className: \"submit-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateRecipe, \"2BdSUGxDwB4un1PWWPd22c1MiNE=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateRecipe;\nexport default CreateRecipe;\nvar _c;\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","CreateRecipe","user_id","_s","name","setName","description","setDescription","message","setMessage","navigate","handleSubmit","e","preventDefault","recipeData","user","response","fetch","method","headers","body","JSON","stringify","data","json","ok","setTimeout","error","console","children","className","style","color","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/janewmwaura/newrecipe/Phase_4_Project_Recipe_Hub/client/src/CreateRecipe.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction CreateRecipe({ user_id }) {\n    const [name, setName] = useState('');\n    const [description, setDescription] = useState('');\n    const [message, setMessage] = useState('');\n    const navigate = useNavigate();\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const recipeData = {\n            name: name,\n            description: description,\n            user: user_id // Associate the new recipe with the logged-in user\n        };\n\n        try {\n            const response = await fetch('/create_recipe', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'UserId': user_id // Pass the logged-in username in the headers\n                },\n                body: JSON.stringify(recipeData)\n            });\n\n            const data = await response.json();\n            if (response.ok) {\n                setMessage('Recipe created successfully'); // Set success message\n                setTimeout(() => {\n                    setMessage(''); // Clear the success message after a certain time\n                    navigate('/dashboard');\n                }, 3000); // Auto-dismiss after 3 seconds\n            } else {\n                setMessage(data.error || 'Error creating recipe');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n            setMessage('Error creating recipe');\n        }\n    };\n\n    return (\n        <div>\n            <div className=\"add-recipe-container\">\n                {message && (\n                    <div className=\"success-message\" style={{ color: 'green', fontWeight: 'bold' }}>\n                        {message}\n                    </div>\n                )}\n                <h2>Create New Recipe</h2>\n                <form onSubmit={handleSubmit} className=\"recipe-form\">\n                    <div>\n                        <label htmlFor=\"name\">Name:</label>\n                        <input type=\"text\" id=\"name\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\n                    </div>\n                    <br /><br />\n                    <div>\n                        <label htmlFor=\"description\">Description:</label>\n                        <textarea id=\"description\" name=\"description\" value={description} onChange={(e) => setDescription(e.target.value)} />\n                    </div>\n                    <br /><br />\n                    <input type=\"submit\" value=\"Create Recipe\" className=\"submit-button\" />\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreateRecipe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}