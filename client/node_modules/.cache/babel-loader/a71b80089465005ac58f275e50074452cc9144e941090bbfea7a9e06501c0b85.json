{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function EditRecipe(_ref){let{username}=_ref;const[recipes,setRecipes]=useState([]);const[selectedRecipeId,setSelectedRecipeId]=useState('');const[message,setMessage]=useState('');const[recipe,setRecipe]=useState({name:'',description:''});const[isLoading,setIsLoading]=useState(false);const navigate=useNavigate();const token=\"YOUR_BEARER_TOKEN\";useEffect(()=>{const fetchUserRecipes=async()=>{try{setIsLoading(true);const response=await fetch(\"/get_user_recipes/\".concat(username),{headers:{'Authorization':\"Bearer \".concat(token)}});const data=await response.json();if(response.ok){setRecipes(data.recipes);}else{console.error('Error fetching user recipes:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}};fetchUserRecipes();},[username]);useEffect(()=>{const fetchRecipeDetails=async()=>{if(selectedRecipeId&&recipes.length>0){try{setIsLoading(true);const response=await fetch(\"/get_recipe/\".concat(username,\"/\").concat(selectedRecipeId),{headers:{'Authorization':\"Bearer \".concat(token)}});const data=await response.json();if(response.ok){setRecipe({name:data.name,description:data.description});}else{console.error('Error fetching recipe details:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}}};fetchRecipeDetails();},[username,selectedRecipeId,recipes]);const handleSelectRecipe=e=>{setSelectedRecipeId(e.target.value);const selectedRecipe=recipes.find(recipe=>recipe.id===parseInt(e.target.value));// Update the recipe state with the selected recipe details\nif(selectedRecipe){setRecipe({name:selectedRecipe.name,description:selectedRecipe.description});}};const handleSubmit=async e=>{e.preventDefault();if(!selectedRecipeId||selectedRecipeId===''){console.error('No recipe selected');return;}const recipeData={name:recipe.name,description:recipe.description};try{setIsLoading(true);const response=await fetch(\"/edit_recipe/\".concat(selectedRecipeId),{method:'PUT',headers:{'Content-Type':'application/json','UserId':username},body:JSON.stringify(recipeData)});const data=await response.json();if(response.ok){setMessage('Recipe updated successfully');setTimeout(()=>{setMessage('');navigate('/my-recipes');},3000);}else{console.error('Error updating recipe:',data.message);}}catch(error){console.error('Error:',error);}finally{setIsLoading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Edit Recipe\"}),message&&/*#__PURE__*/_jsx(\"div\",{className:\"success-message\",style:{color:'green',fontWeight:'bold',paddingBottom:25},children:message}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"selectRecipe\",children:\"Select Recipe:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"selectRecipe\",onChange:handleSelectRecipe,value:selectedRecipeId,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select a recipe\"}),recipes.map(recipe=>/*#__PURE__*/_jsx(\"option\",{value:recipe.id,children:recipe.name},recipe.id))]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"name\",value:recipe.name,onChange:e=>setRecipe({...recipe,name:e.target.value})})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"description\",children:\"Description:\"}),/*#__PURE__*/_jsx(\"textarea\",{id:\"description\",value:recipe.description,onChange:e=>setRecipe({...recipe,description:e.target.value})})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Save Changes\"})]})]});}export default EditRecipe;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsx","_jsx","jsxs","_jsxs","EditRecipe","_ref","username","recipes","setRecipes","selectedRecipeId","setSelectedRecipeId","message","setMessage","recipe","setRecipe","name","description","isLoading","setIsLoading","navigate","token","fetchUserRecipes","response","fetch","concat","headers","data","json","ok","console","error","fetchRecipeDetails","length","handleSelectRecipe","e","target","value","selectedRecipe","find","id","parseInt","handleSubmit","preventDefault","recipeData","method","body","JSON","stringify","setTimeout","className","children","style","color","fontWeight","paddingBottom","onSubmit","htmlFor","onChange","disabled","map","type"],"sources":["/home/janewmwaura/newrecipe/Phase_4_Project_Recipe_Hub/client/src/EditRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction EditRecipe({ username }) {\n    const [recipes, setRecipes] = useState([]);\n    const [selectedRecipeId, setSelectedRecipeId] = useState('');\n    const [message, setMessage] = useState('');\n    const [recipe, setRecipe] = useState({\n        name: '',\n        description: ''\n    });\n    const [isLoading, setIsLoading] = useState(false);\n    const navigate = useNavigate();\n    const token = \"YOUR_BEARER_TOKEN\";  \n    useEffect(() => {\n        const fetchUserRecipes = async () => {\n            try {\n                setIsLoading(true);\n                const response = await fetch(`/get_user_recipes/${username}`, {\n                    headers: {\n                        'Authorization': `Bearer ${token}`  \n                    }\n                });\n                const data = await response.json();\n                if (response.ok) {\n                    setRecipes(data.recipes);\n                } else {\n                    console.error('Error fetching user recipes:', data.message);\n                }\n            } catch (error) {\n                console.error('Error:', error);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchUserRecipes();\n    }, [username]);\n\n    useEffect(() => {\n        const fetchRecipeDetails = async () => {\n            if (selectedRecipeId && recipes.length > 0) {\n                try {\n                    setIsLoading(true);\n                    const response = await fetch(`/get_recipe/${username}/${selectedRecipeId}`, {\n                        headers: {\n                            'Authorization': `Bearer ${token}`  \n                        }\n                    });\n                    const data = await response.json();\n                    if (response.ok) {\n                        setRecipe({\n                            name: data.name,\n                            description: data.description\n                        });\n                    } else {\n                        console.error('Error fetching recipe details:', data.message);\n                    }\n                } catch (error) {\n                    console.error('Error:', error);\n                } finally {\n                    setIsLoading(false);\n                }\n            }\n        };\n\n        fetchRecipeDetails();\n    }, [username, selectedRecipeId, recipes]);\n\n    const handleSelectRecipe = (e) => {\n        setSelectedRecipeId(e.target.value);\n        \n        \n        const selectedRecipe = recipes.find(recipe => recipe.id === parseInt(e.target.value));\n        \n        // Update the recipe state with the selected recipe details\n        if (selectedRecipe) {\n            setRecipe({\n                name: selectedRecipe.name,\n                description: selectedRecipe.description\n            });\n        }\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n    \n        if (!selectedRecipeId || selectedRecipeId === '') {\n            console.error('No recipe selected');\n            return;\n        }\n    \n        const recipeData = {\n            name: recipe.name,\n            description: recipe.description,\n        };\n    \n        try {\n            setIsLoading(true);\n            const response = await fetch(`/edit_recipe/${selectedRecipeId}`, {\n                method: 'PUT',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'UserId': username  \n                },\n                body: JSON.stringify(recipeData)\n            });\n            const data = await response.json();\n            if (response.ok) {\n                setMessage('Recipe updated successfully'); \n                setTimeout(() => {\n                    setMessage(''); \n                    navigate('/my-recipes');\n                }, 3000);}\n                 else {\n                console.error('Error updating recipe:', data.message);\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        } finally {\n            setIsLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>Edit Recipe</h2>\n            {message && (\n                    <div className=\"success-message\" style={{ color: 'green', fontWeight: 'bold', paddingBottom: 25 }}>\n                        {message}\n                    </div>\n                )}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"selectRecipe\">Select Recipe:</label>\n                    <select id=\"selectRecipe\" onChange={handleSelectRecipe} value={selectedRecipeId}>\n                        <option value=\"\" disabled>Select a recipe</option>\n                        {recipes.map(recipe => (\n                            <option key={recipe.id} value={recipe.id}>\n                                {recipe.name}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n                <div>\n                    <label htmlFor=\"name\">Name:</label>\n                    <input \n                        type=\"text\" \n                        id=\"name\" \n                        value={recipe.name} \n                        onChange={(e) => setRecipe({ ...recipe, name: e.target.value })} \n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"description\">Description:</label>\n                    <textarea \n                        id=\"description\" \n                        value={recipe.description} \n                        onChange={(e) => setRecipe({ ...recipe, description: e.target.value })} \n                    ></textarea>\n                </div>\n                <button type=\"submit\">Save Changes</button>\n            </form>\n        </div>\n    );\n}\n\nexport default EditRecipe;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAe,IAAd,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC5B,KAAM,CAACE,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACY,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACgB,MAAM,CAAEC,SAAS,CAAC,CAAGjB,QAAQ,CAAC,CACjCkB,IAAI,CAAE,EAAE,CACRC,WAAW,CAAE,EACjB,CAAC,CAAC,CACF,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAAsB,QAAQ,CAAGpB,WAAW,CAAC,CAAC,CAC9B,KAAM,CAAAqB,KAAK,CAAG,mBAAmB,CACjCtB,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAuB,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjC,GAAI,CACAH,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,sBAAAC,MAAA,CAAsBlB,QAAQ,EAAI,CAC1DmB,OAAO,CAAE,CACL,eAAe,WAAAD,MAAA,CAAYJ,KAAK,CACpC,CACJ,CAAC,CAAC,CACF,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACbpB,UAAU,CAACkB,IAAI,CAACnB,OAAO,CAAC,CAC5B,CAAC,IAAM,CACHsB,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAEJ,IAAI,CAACf,OAAO,CAAC,CAC/D,CACJ,CAAE,MAAOmB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNZ,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAEDG,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,CAACf,QAAQ,CAAC,CAAC,CAEdR,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAiC,kBAAkB,CAAG,KAAAA,CAAA,GAAY,CACnC,GAAItB,gBAAgB,EAAIF,OAAO,CAACyB,MAAM,CAAG,CAAC,CAAE,CACxC,GAAI,CACAd,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,gBAAAC,MAAA,CAAgBlB,QAAQ,MAAAkB,MAAA,CAAIf,gBAAgB,EAAI,CACxEgB,OAAO,CAAE,CACL,eAAe,WAAAD,MAAA,CAAYJ,KAAK,CACpC,CACJ,CAAC,CAAC,CACF,KAAM,CAAAM,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACbd,SAAS,CAAC,CACNC,IAAI,CAAEW,IAAI,CAACX,IAAI,CACfC,WAAW,CAAEU,IAAI,CAACV,WACtB,CAAC,CAAC,CACN,CAAC,IAAM,CACHa,OAAO,CAACC,KAAK,CAAC,gCAAgC,CAAEJ,IAAI,CAACf,OAAO,CAAC,CACjE,CACJ,CAAE,MAAOmB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNZ,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CACJ,CAAC,CAEDa,kBAAkB,CAAC,CAAC,CACxB,CAAC,CAAE,CAACzB,QAAQ,CAAEG,gBAAgB,CAAEF,OAAO,CAAC,CAAC,CAEzC,KAAM,CAAA0B,kBAAkB,CAAIC,CAAC,EAAK,CAC9BxB,mBAAmB,CAACwB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAGnC,KAAM,CAAAC,cAAc,CAAG9B,OAAO,CAAC+B,IAAI,CAACzB,MAAM,EAAIA,MAAM,CAAC0B,EAAE,GAAKC,QAAQ,CAACN,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAErF;AACA,GAAIC,cAAc,CAAE,CAChBvB,SAAS,CAAC,CACNC,IAAI,CAAEsB,cAAc,CAACtB,IAAI,CACzBC,WAAW,CAAEqB,cAAc,CAACrB,WAChC,CAAC,CAAC,CACN,CACJ,CAAC,CAED,KAAM,CAAAyB,YAAY,CAAG,KAAO,CAAAP,CAAC,EAAK,CAC9BA,CAAC,CAACQ,cAAc,CAAC,CAAC,CAElB,GAAI,CAACjC,gBAAgB,EAAIA,gBAAgB,GAAK,EAAE,CAAE,CAC9CoB,OAAO,CAACC,KAAK,CAAC,oBAAoB,CAAC,CACnC,OACJ,CAEA,KAAM,CAAAa,UAAU,CAAG,CACf5B,IAAI,CAAEF,MAAM,CAACE,IAAI,CACjBC,WAAW,CAAEH,MAAM,CAACG,WACxB,CAAC,CAED,GAAI,CACAE,YAAY,CAAC,IAAI,CAAC,CAClB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAC,KAAK,iBAAAC,MAAA,CAAiBf,gBAAgB,EAAI,CAC7DmC,MAAM,CAAE,KAAK,CACbnB,OAAO,CAAE,CACL,cAAc,CAAE,kBAAkB,CAClC,QAAQ,CAAEnB,QACd,CAAC,CACDuC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACJ,UAAU,CACnC,CAAC,CAAC,CACF,KAAM,CAAAjB,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClC,GAAIL,QAAQ,CAACM,EAAE,CAAE,CACbhB,UAAU,CAAC,6BAA6B,CAAC,CACzCoC,UAAU,CAAC,IAAM,CACbpC,UAAU,CAAC,EAAE,CAAC,CACdO,QAAQ,CAAC,aAAa,CAAC,CAC3B,CAAC,CAAE,IAAI,CAAC,CAAC,CAAC,IACJ,CACNU,OAAO,CAACC,KAAK,CAAC,wBAAwB,CAAEJ,IAAI,CAACf,OAAO,CAAC,CACzD,CACJ,CAAE,MAAOmB,KAAK,CAAE,CACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CAAC,OAAS,CACNZ,YAAY,CAAC,KAAK,CAAC,CACvB,CACJ,CAAC,CAED,mBACIf,KAAA,QAAK8C,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC3BjD,IAAA,OAAAiD,QAAA,CAAI,aAAW,CAAI,CAAC,CACnBvC,OAAO,eACAV,IAAA,QAAKgD,SAAS,CAAC,iBAAiB,CAACE,KAAK,CAAE,CAAEC,KAAK,CAAE,OAAO,CAAEC,UAAU,CAAE,MAAM,CAAEC,aAAa,CAAE,EAAG,CAAE,CAAAJ,QAAA,CAC7FvC,OAAO,CACP,CACR,cACLR,KAAA,SAAMoD,QAAQ,CAAEd,YAAa,CAAAS,QAAA,eACzB/C,KAAA,QAAA+C,QAAA,eACIjD,IAAA,UAAOuD,OAAO,CAAC,cAAc,CAAAN,QAAA,CAAC,gBAAc,CAAO,CAAC,cACpD/C,KAAA,WAAQoC,EAAE,CAAC,cAAc,CAACkB,QAAQ,CAAExB,kBAAmB,CAACG,KAAK,CAAE3B,gBAAiB,CAAAyC,QAAA,eAC5EjD,IAAA,WAAQmC,KAAK,CAAC,EAAE,CAACsB,QAAQ,MAAAR,QAAA,CAAC,iBAAe,CAAQ,CAAC,CACjD3C,OAAO,CAACoD,GAAG,CAAC9C,MAAM,eACfZ,IAAA,WAAwBmC,KAAK,CAAEvB,MAAM,CAAC0B,EAAG,CAAAW,QAAA,CACpCrC,MAAM,CAACE,IAAI,EADHF,MAAM,CAAC0B,EAEZ,CACX,CAAC,EACE,CAAC,EACR,CAAC,cACNpC,KAAA,QAAA+C,QAAA,eACIjD,IAAA,UAAOuD,OAAO,CAAC,MAAM,CAAAN,QAAA,CAAC,OAAK,CAAO,CAAC,cACnCjD,IAAA,UACI2D,IAAI,CAAC,MAAM,CACXrB,EAAE,CAAC,MAAM,CACTH,KAAK,CAAEvB,MAAM,CAACE,IAAK,CACnB0C,QAAQ,CAAGvB,CAAC,EAAKpB,SAAS,CAAC,CAAE,GAAGD,MAAM,CAAEE,IAAI,CAAEmB,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAE,CACnE,CAAC,EACD,CAAC,cACNjC,KAAA,QAAA+C,QAAA,eACIjD,IAAA,UAAOuD,OAAO,CAAC,aAAa,CAAAN,QAAA,CAAC,cAAY,CAAO,CAAC,cACjDjD,IAAA,aACIsC,EAAE,CAAC,aAAa,CAChBH,KAAK,CAAEvB,MAAM,CAACG,WAAY,CAC1ByC,QAAQ,CAAGvB,CAAC,EAAKpB,SAAS,CAAC,CAAE,GAAGD,MAAM,CAAEG,WAAW,CAAEkB,CAAC,CAACC,MAAM,CAACC,KAAM,CAAC,CAAE,CAChE,CAAC,EACX,CAAC,cACNnC,IAAA,WAAQ2D,IAAI,CAAC,QAAQ,CAAAV,QAAA,CAAC,cAAY,CAAQ,CAAC,EACzC,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAA9C,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}